version: "3.9"

services:
  postgres:
    image: postgres:14-alpine
    env_file:
      - .env.example
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis
    environment:
      - decode_responses=True

  flask:
    build:
      context: .
    env_file:
      - .env.example
    depends_on:
      - redis
      - postgres

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d/:ro
    depends_on:
      - flask
    links:
      - jaeger
    ports:
      - "8000:8000"

  grpc_nginx:
    image: nginx:latest
    volumes:
      - ./grpc_nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./grpc_nginx/conf.d:/etc/nginx/conf.d/:ro
    depends_on:
      - grpc
    ports:
      - "50051:50051"

  grpc:
    build:
      dockerfile: grpc.Dockerfile
    env_file:
      - ".env.example"
    depends_on:
      - postgres

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
        - "16686:16686"
    environment:
        - COLLECTOR_ZIPKIN_HTTP_PORT=9411
        - LOG_LEVEL=debug
    restart: on-failure

volumes:
  db_data: